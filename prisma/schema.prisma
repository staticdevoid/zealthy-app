// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model User {
    id         Int       @id @default(autoincrement())
    email      String?   @unique
    password   String?
    aboutMe    String?
    street     String?
    city       String?
    state      String?
    postalCode String?
    country    String?
    birthdate  DateTime?
    createdAt  DateTime  @default(now())
}

model Form {
    id        Int      @id @default(autoincrement())
    name      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    steps     Step[]
}

model Step {
    id        Int       @id @default(autoincrement())
    formId    Int
    order     Int
    title     String
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    sections  Section[]
    form      Form      @relation(fields: [formId], references: [id])

    @@index([order])
}

model Section {
    id                Int      @id @default(autoincrement())
    stepId            Int
    order             Int
    title             String
    isAdminMoveable   Boolean  @default(true)
    isFrontendVisible Boolean  @default(true)
    createdAt         DateTime @default(now())
    updatedAt         DateTime @updatedAt
    fields            Field[]
    step              Step     @relation(fields: [stepId], references: [id])

    @@index([stepId])
}

model Field {
    id           Int       @id @default(autoincrement())
    sectionId    Int? // Nullable for fields without sections
    label        String
    userProperty String    @default("")
    fieldType    FieldType @default(TEXT)
    order        Int
    isRequired   Boolean   @default(true)
    createdAt    DateTime  @default(now())
    updatedAt    DateTime  @updatedAt
    flexBoxWidth Int       @default(4) //1-4 each being 25 percent of the full width
    section      Section?  @relation(fields: [sectionId], references: [id], onDelete: SetNull, onUpdate: Cascade)

    @@index([sectionId])
}

enum FieldType {
    MULTILINETEXT
    TEXT
    NUMBER
    DATE
    EMAIL
    PASSWORD
    ZIP
}
